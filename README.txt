<h2><strong>Nature Language Processing</strong><br /><em>YIXUN WANG</em></h2>
<p><strong>TOPIC</strong>: Information Extraction on NBA Scores Reports <br /><strong>Data Corpus</strong>: Yahoo Sports -&gt; NBA -&gt; Scores Reports <br /><strong>Programming Language</strong>: JAVA <br /><strong>External Library</strong>: JET <br /><strong>Source Code</strong>: NLP/src/nlp/sportsextraction/Main.java <br /> NLP/src/nlp/sportsextraction/ReadingFile.java <br /> NLP-Measure/src/Measure.java <br /> <br /><strong>JET Files</strong>: [Make sure Jet.dataPath in *.jet ﬁle is set correctly] <br /> jet/props/nbaScores.jet <br /> jet/props/point.jet <br /> jet/data/chunkPatternsSP.txt <br /> jet/data/scoresPatterns.txt <br /> jet/data/sportConcepts.hrc <br /> jet/data/pointsPatterns.txt <br /> jet/data/scoreConcepts.hrc</p>
<p><br /><strong>Input Data and Formation</strong>: <br />The Data corpus were extracted from Yahoo Sports by hand. There are 57 individual news <br />reports as a whole and most of which contains more than 400 words or 1700 characters on <br />average, that is, for each article it contains the whole report it self, not only a part. However I <br />exclude the report&rsquo;s title, or else I can play a cheat on it since a title usually reﬂects most of <br />information that I need.<br />Here is a sample input of two news:<br /> &lt;TEXT&gt; <br /> The content of the ﬁrst NBA report is here.<br /> &lt;/TEXT&gt; <br /> &lt;TEXT&gt; <br /> The content of another NBA report is here.<br /> &lt;/TEXT&gt; <br /> <br /><strong>Training Patterns</strong>: <br />I use six tenth of the total data corpus to train my events patterns and then place a test on the <br />whole 57 news reports. <br />There are three major training targets of this project:</p>
<p>1)<strong><em> to get the HOME COURT</em> </strong><br /> Luckily enough, I found Yahoo Sports always put the game location at the very <br />beginning, and I can simply extract the rough location information over there and analysis it by <br />comparing it with my database. However, In case of no such a convenience, I would also ﬁrst <br />get a set of possible location by using location-Pattern, second compare such locations with <br />what I get from TEAM and SCORES Pattern. The TEAM information must be linked with the <br />wanted location so that it&rsquo;s possible to get it correctly.<br /> <br />2) <em><strong>to get the TEAM and SCORES</strong></em></p>
<p>This is one of the main purpose of my project, and there are three kind of informations I <br />need to obtain: WIN-TEAM, LOSE-TEAM and SCORES since these informations are almost <br />always show up together, such as: <br />&ldquo;TEAM-A win/beat TEAM-B with SCORES xxx-xxx&rdquo; <br />or <br />&ldquo;TEAM-A give TEAM-B a loss with SCORES xxx-xxx&rdquo; <br /> <br />However there are also many more complexed combinations which requires a more careful <br />Pattern construction: <br />&ldquo;TEAM-A champions to a SCORES xxx-xxx victory over TEAM-B&rdquo; <br />or <br />&ldquo;TEAM-A went into the All-Star break with their fourth victory in ﬁve games, pounding the TEAM- <br />B SCORES xxx-xxx&rdquo; <br /> <br />One can deﬁne numerous patterns to cover most combinations, my way to break through this <br />question, on the other hand, is that by: <br /> ﬁrst locating the key cWIN words like WIN or VICTORY <br /> then ﬁnding out the corresponding TEAM tag either on both sides or on the same side, <br /> and ﬁnally take the struct of sentence into consideration. <br />I can somehow predict TEAMs and SCOREs correctly and efﬁciently. <br />My pattern ﬁle will be attached to the end of this report. <br /> <br />3) <em><strong>to get the PLAYER WITH HIGHEST POINTS</strong> </em><br />This is trying to get the possible highest POINTS in a given game, and the corresponding <br />PLAYER. Again, there are numbers of different ways of saying: <br /> &ldquo;PLAYER scored xx POINTS&rdquo; <br />For instance, we can say: <br />&ldquo;PLAYER was the leading scorer with xx POINTS.&rdquo; <br />or <br />&ldquo;PLAYER scored xx of his season-high xx POINTS.&rdquo; <br />This time I&rsquo;m trying to cover these situations carefully and totally with various of patterns. <br /> <br /><strong>What do I do with my JAVA code</strong> <br />1) Parsing the text into a set of sentences and store them in proper data structure. This allows <br />me to eliminate sentences that doesn&rsquo;t contains any KEY word like TEAM name or the <br />concept of WIN and LOSE. Notice that, I can not simple separate the whole context by <br />period, because there are names like &ldquo;D.J. Augustin&rdquo; also contains &ldquo;.&rdquo; which requires <br />additional processing.</p>
<p><br />2) Applying JET Pattern Matching on each sentence. There are two kind of Patterns, one for <br />ﬁnding out TEAMS and SCORES, the other is for searching a PLAYER and his HIGHEST <br />POINTS. Usually this step will generate a lot of redundant values that leaves to me for <br />further processing.</p>
<p><br />3) Filter redundant informations. for instance, I can make a use of pre-acquired LOCATION to <br />help me choosing the patterns that contains the right TEAMS and SCORES, or I can use my <br />database to eliminate a ENAMEX that doesn&rsquo;t belong to a Person but belong to a TEAM or a <br />LOCATION when I dealing with PLAYER and POINTS information.</p>
<p><br />4) Measure the output and get the Precision &amp; Recall. The standard output of extraction as well <br />as my hand-made evaluation are listed to the end of the report. Each article contains 6 <br />points of informations[LOCATION, WIN-TEAM, LOSE-TEAM, SCORES, PLAYER, POINTS]<br />so that there are 57*6 = 342 pieces of informations need to be check. The measurement <br />including a totally Precision and Recall, and for each of the three extraction targets, I also <br />calculated their corresponding Precision and Recall values.</p>